<style lang="css">
    .full-width {
        width: 100%;
    }
</style>
<template>
    <view class="page">
        <view class="page__hd">
            <view class="page__title">{{itemName}}</view>
            <view class="page__desc">最近十个点历史数据</view>
        </view>
        <view class="page__bd">

            <view class="weui-panel weui-panel_access">
                <view class="weui-panel__hd">趋势图</view>
                <view class="weui-panel__bd">
                    <view class="weui-media-box weui-media-box_text">
                        <view class="weui-media-box__title weui-media-box__title_in-text"></view>
                        <view class="weui-media-box__desc">
                            <canvas canvas-id="lineCanvas" disable-scroll="true" style="margin-top: 10px;"
                                    class="canvas full-width"></canvas>
                        </view>
                    </view>
                </view>
                <view>
                    <view class="weui-cell weui-cell_access weui-cell_link" style="display: block;float: right;">
                        <button class="weui-btn" type="primary" bindtap="updateData">更新数据</button>
                    </view>
                </view>
            </view>
        </view>
        <view class="weui-panel weui-panel_access">
            <view class="weui-cell weui-cell_access" wx:for="{{valueList}}" wx:key="id" wx:for-item="item">
                <view class="weui-cell__bd">
                    <text>{{item.time}}</text>
                    <text style="margin-left: 20px;">{{item.data}}</text>
                </view>
            </view>
        </view>
    </view>

</template>


<script>

  import wepy from 'wepy'
  import BatteryModel from '../../class/BatteryModel'

  var wxCharts = require('../../class/wxcharts-min')
  export default class bleDeviceDetail extends wepy.page {
    data = {
      lineChart: null,
      itemName: 'N/A',
      item: null,
      valueList: []
    }
    config = {
      'navigationBarTitleText': '历史数据'
    }
    methods = {}
    events = {}

    // name
    onLoad(query) {
      console.log(query)
      // 获取数据
      this.itemName = query.name || '电量'
      this.item = BatteryModel.GetInstance().findItemsByName(this.itemName)
      this.valueList = this.item.historyData
    }

    onUnload() {
      console.log('unOnload!!!')
    }

    onReady() {
      if (this.item === null) {
        wx.showToast({
          title: '错误，无当前数据项！',
          icon: 'none',
          duration: 3000
        })
        return
      }
      // 测试数据
      // this.item.initDemoData()
      if (this.item.historyData.length < 10) {
        wx.showToast({
          title: '数据过少！',
          icon: 'none',
          duration: 3000
        })
        return
      }
      this.initChart()
    }

    touchHandler(e) {
      // return
      console.log(this.lineChart.getCurrentDataIndex(e))
      this.lineChart.showToolTip(e, {
        // background: '#7cb5ec',
        format: function (item, category) {
          return category + ' ' + item.name + ':' + item.data
        }
      })
    }

    createSimulationData() {
      var categories = []
      console.log(this.item)
      var data = this.item.historyData.slice(this.item.historyData.length - 10, this.item.historyData.length)
      var sdata = []
      for (var i = 0; i < 10; i++) {
        console.log(data[i])
        let catego = data[i].time.slice(-8, data[i].length)
        categories.push(catego)
        sdata.push(data[i].data)
      }
      let o = {
        categories: categories,
        data: sdata
      }
      console.log(o)
      return o
    }

    updateData() {
      var simulationData = this.createSimulationData()
      var series = [{
        name: this.itemName,
        data: simulationData.data,
        format: function (val, name) {
          return val.toFixed(2) + this.item.unit
        }
      }]
      console.log(series)
      this.lineChart.updateData({
        categories: simulationData.categories,
        series: series
      })
    }

    initChart() {
      var windowWidth = 320
      try {
        var res = wx.getSystemInfoSync()
        windowWidth = res.windowWidth
      } catch (e) {
        console.error('getSystemInfoSync failed!')
      }

      var simulationData = this.createSimulationData()
      this.lineChart = new wxCharts({
        canvasId: 'lineCanvas',
        type: 'line',
        categories: simulationData.categories,
        animation: true,
        // background: '#f5f5f5',
        series: [{
          name: this.itemName,
          data: simulationData.data,
          format: function (val, name) {
            return val.toFixed(2) + this.item.unit
          }
        }],
        title: '',
        xAxis: {
          disableGrid: true
        },
        yAxis: {
          title: '',
          format: function (val) {
            return val.toFixed(2)
          },
          min: 0
        },
        width: windowWidth,
        height: 180,
        dataLabel: false,
        dataPointShape: false,
        extra: {
          lineStyle: 'curve'
        }
      })
    }
  }
</script>
